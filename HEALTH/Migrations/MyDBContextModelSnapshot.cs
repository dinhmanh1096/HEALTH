// <auto-generated />
using System;
using HEALTH.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HEALTH.Migrations
{
    [DbContext(typeof(MyDBContext))]
    partial class MyDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HEALTH.Data.Role", b =>
                {
                    b.Property<Guid>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("HEALTH.Data.Sport", b =>
                {
                    b.Property<Guid>("SportID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SportName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SportID");

                    b.ToTable("Sport", (string)null);
                });

            modelBuilder.Entity("HEALTH.Data.User", b =>
                {
                    b.Property<Guid>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("WorkoutID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserID");

                    b.HasIndex("RoleID");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("HEALTH.Data.Workout", b =>
                {
                    b.Property<Guid>("WorkoutID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SportID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WorkoutName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkoutTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkoutID");

                    b.HasIndex("SportID");

                    b.ToTable("Workout", (string)null);
                });

            modelBuilder.Entity("HEALTH.Data.User", b =>
                {
                    b.HasOne("HEALTH.Data.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_role_user");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("HEALTH.Data.Workout", b =>
                {
                    b.HasOne("HEALTH.Data.Sport", "sport")
                        .WithMany("Workouts")
                        .HasForeignKey("SportID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Sport_Workout");

                    b.HasOne("HEALTH.Data.User", "User")
                        .WithOne("Workout")
                        .HasForeignKey("HEALTH.Data.Workout", "WorkoutID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("sport");
                });

            modelBuilder.Entity("HEALTH.Data.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("HEALTH.Data.Sport", b =>
                {
                    b.Navigation("Workouts");
                });

            modelBuilder.Entity("HEALTH.Data.User", b =>
                {
                    b.Navigation("Workout")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
